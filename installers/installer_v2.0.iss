; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "RetroFF Ultimate"
#define MyAppVersion "2.0"
#define MyAppPublisher "Superusers Mediapro"
#define MyAppExeName "retroFF.exe"
#define MyAppSourceName "retroFF.ps1"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D2BACE24-8C65-4FFD-8851-C8FAB20FC25D}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName=C:\Program Files\{#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=RetroFF_Installer
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MyAppSourceName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "settings.json"; DestDir: "{app}"; Flags: ignoreversion

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"

[Registry]
Root: HKCR; Subkey: "*\shell\RetroFF"; Flags: uninsdeletekey deletekey;
Root: HKCR; Subkey: "*\shell\RetroFF"; ValueType: string; ValueName: "MUIVerb"; ValueData: Transcode with {#MyAppName}
Root: HKCR; Subkey: "*\shell\RetroFF"; ValueType: string; ValueName: "subcommands";
Root: HKCR; Subkey: "*\shell\RetroFF\shell\1basic"; ValueType: string; ValueData: "Transcode basic"
Root: HKCR; Subkey: "*\shell\RetroFF\shell\1basic\command"; ValueType: string; ValueData: "cmd /c start /wait /b retroFF -file ""%1"""
Root: HKCR; Subkey: "*\shell\RetroFF\shell\2logs"; ValueType: string; ValueData: "Transcode with logs"
Root: HKCR; Subkey: "*\shell\RetroFF\shell\2logs\command"; ValueType: string; ValueData: "cmd /c start /wait /b retroFF -file ""%1"" -log"
Root: HKCR; Subkey: "*\shell\RetroFF\shell\runas"; ValueType: dword; ValueName: CommandFlags; ValueData: 00000050
Root: HKCR; Subkey: "*\shell\RetroFF\shell\runas"; ValueType: string; ValueData: "Advanced settings"
Root: HKCR; Subkey: "*\shell\RetroFF\shell\runas\command"; ValueType: string; ValueData: "notepad.exe ""C:\Program Files\RetroFF Ultimate\settings.json"""

Root: HKCR; Subkey: "Directory\Background\shell\RetroFF"; Flags: uninsdeletekey deletekey;
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF"; ValueType: string; ValueName: "MUIVerb"; ValueData: Transcode with {#MyAppName}
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF"; ValueType: string; ValueName: "subcommands";
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\1basic"; ValueType: string; ValueData: "Transcode basic"
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\1basic\command"; ValueType: string; ValueData: "cmd /c start /wait /b retroFF -folder ."
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\2logs"; ValueType: string; ValueData: "Transcode with logs"
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\2logs\command"; ValueType: string; ValueData: "cmd /c start /wait /b retroFF -folder . -log"
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\runas"; ValueType: dword; ValueName: CommandFlags; ValueData: 00000050
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\runas"; ValueType: string; ValueData: "Advanced settings"
Root: HKCR; Subkey: "Directory\Background\shell\RetroFF\shell\runas\command"; ValueType: string; ValueData: "notepad.exe ""C:\Program Files\RetroFF Ultimate\settings.json"""

Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};C:\Program Files\{#MyAppName}"; Check: NeedsAddPath('C:\Program Files\{#MyAppName}')

[Code]
function NeedsAddPath(Param: string): boolean;
var
  OrigPath: string;
begin
  if not RegQueryStringValue(HKEY_LOCAL_MACHINE,
    'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
    'Path', OrigPath)
  then begin
    Result := True;
    exit;
  end;
  { look for the path with leading and trailing semicolon }
  { Pos() returns 0 if not found }
  Result := Pos(';' + Param + ';', ';' + OrigPath + ';') = 0;
end;
